name: Update Lambda
run-name: Deploy ${{ github.sha }} to ${{ github.ref_name }} by @${{ github.actor }}
on:
  push:
    branches:
     - main
env:
  AWS_REGION: ap-northeast-1
  AWS_ACCOUNT_ID: 267751904634
  AWS_ROLE_NAME: nasu-prod-github-actions-role

permissions:
  id-token: write
  contents: read
jobs:
  deploy:
    strategy:
      matrix:
        lambda-function-name: ["test1", "test2"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.AWS_ROLE_NAME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR, and update Lambda function
        id: build-image-and-update-lambda
        
        env:
          LAMBDA_FUNCTION_NAME: ${{ matrix.lambda-function-name }}
          ECR_REPOSITORY: nasu/prod/updata-state
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        
        working-directory: ./aws/lambda_function/update_states
        
        run: |
          # Build a docker container and
          # tag and
          # push it to ECR
          docker build -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest .
          docker tag ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
          # Update Lambda configuration
          #aws lambda update-function-code --function-name ${LAMBDA_FUNCTION_NAME} --image-uri ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest
          echo ${LAMBDA_FUNCTION_NAME}
